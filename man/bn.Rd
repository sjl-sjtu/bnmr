% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bn.R
\name{bn}
\alias{bn}
\title{Getting suitable genetic IVs through random graph forest, which is based on Bayesian network structure learning}
\usage{
bn(
  df,
  snp,
  exposureName,
  bn_method = "hc",
  repeats = 1000,
  selectNum = NA,
  alpha = 0.9,
  nsam = 1000,
  psam = 100,
  sample_replace = TRUE
)
}
\arguments{
\item{df}{a data frame which contains data of SNPs and specified exposure. The values of snps in the data frame should be either numeric or factors (not integers) for BN learning.}

\item{snp}{a vector of string belonging to column names of df, which is the name of SNPs included in BN structure learning.}

\item{exposureName}{a string which is a colname of df corresponding to the exposure studied.}

\item{bn_method}{method for BN structure learning. Possible values are the function name of structure learning algorithm implemented in bnlearn. Default is "hc".}

\item{repeats}{an integer standing for the number of subsamples or bootstraps. Default is 1000.}

\item{selectNum}{the number of instrument to select. Default is NA.}

\item{alpha}{we will use a threshold for variant selection as alpha*psam/length(snp). If selectNum is specified, the parameter will not be used. Default is 0.9.}

\item{nsam}{the size of individuals in each subsample of random graph forest. Default is 1000.}

\item{psam}{the size of variants in each subsample of random graph forest. Default is 100.}

\item{sample_replace}{is a boolean value to determine the sampling methods for individuals. TRUE with replacement and FALSE without replacement. Default is TRUE.}
}
\value{
a list containing:
  \item{selectsnp}{a vector of string containing the colnames of df corresponding to selected SNPs.}
  \item{dfscore}{a data frame containing the score calculated for each SNP.}
}
\description{
Getting suitable genetic IVs through random graph forest, which is based on Bayesian network structure learning
}
\examples{
n <- 2000
p <- 200
snps <- replicate(p,sample(1:3,n,replace = TRUE))
snps <- apply(snps,2,as.numeric)
snpname <- paste0("g",1:p)
df <- as.data.frame(snps)
colnames(df) <- snpname
truesnp <- paste0("g",sample(1:p,50))
df$x <- as.matrix(df[,truesnp])\%*\%rnorm(50,0.05,0.05)+rnorm(n,0,1)
df$y <- 0.5*df$x+rnorm(n,0,1)

model <- bn(df,snpname,"x")

}
